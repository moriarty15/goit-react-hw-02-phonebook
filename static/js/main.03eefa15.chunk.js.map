{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Container.js","App.js","index.js","components/Container.module.css"],"names":["ContractForm","state","name","number","handleAllInputChange","e","currentTarget","value","setState","handleS","preventDefault","handlePushContact","trim","props","onSubmit","this","className","onChange","type","pattern","title","required","placeholder","Component","ContactList","f","onDeleteContacts","map","id","onClick","Filter","filter","Container","children","s","container","App","contacts","formSubmitHandler","data","some","includes","alert","objd","uuidv4","deleteContact","contactId","prevState","contact","getVisibleContacts","normalizeFilter","toLowerCase","visibleContacts","React","reactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.03eefa15.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './ContactForm.scss';\r\n\r\nclass ContractForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleAllInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleS = e => {\r\n    e.preventDefault();\r\n  };\r\n  // функция записи новых абонентов в телефонную книгу\r\n  handlePushContact = e => {\r\n    e.preventDefault();\r\n    if (this.state.name.trim() === '') return;\r\n\r\n    this.props.onSubmit(this.state);\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div className=\"form__container\">\r\n        <form onSubmit={this.handlePushContact}>\r\n          <label className=\"label\">\r\n            Name\r\n            <input\r\n              className=\"input\"\r\n              value={name}\r\n              onChange={this.handleAllInputChange}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              placeholder=\"Enter Name\"\r\n            />\r\n          </label>\r\n          <label className=\"label\">\r\n            Number\r\n            <input\r\n              className=\"input\"\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.handleAllInputChange}\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              placeholder=\"Enter Number\"\r\n            />\r\n          </label>\r\n          <button className=\"add__button\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContractForm;\r\n","import React from 'react';\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ f, onDeleteContacts }) => {\r\n  return (\r\n    <ul className=\"Contact__list\">\r\n      {f.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className=\"Contact__item\">\r\n            {name}: {number}{' '}\r\n            <button className=\"button__delete\" type=\"button\" onClick={() => onDeleteContacts(id)}>\r\n              delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className=\"label\">\r\n      Find contacts by name\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        placeholder=\"Enter search name\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import s from \"./Container.module.css\"\r\n\r\nexport default function Container({ children }) {\r\n    return (<div className={s.container}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        {children}\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nimport Container from './components/Container';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n  // функция получения значения из любого инпута\r\n  handleAllInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // метод добавления контакта в телефонную книгу\r\n  formSubmitHandler = data => {\r\n    // условие что контакт с таким именем есть в телефонной книге\r\n    if (this.state.contacts.some(e => e.name.includes(data.name))) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    // объект с именем и номером телефона для пуша в общий массив контактов\r\n    const objd = {\r\n      name: data.name,\r\n      number: data.number,\r\n      id: uuidv4(),\r\n    };\r\n    this.setState({ contacts: [objd, ...this.state.contacts] });\r\n  };\r\n  // метод удаления контакта из телефонной книги\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  // вынес фильтр в функцию\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Container>\r\n        \r\n        <ContactForm onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.handleAllInputChange} />\r\n        <ContactList\r\n          f={visibleContacts}\r\n          onDeleteContacts={this.deleteContact}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import reactDom from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nreactDom.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2tJoU\",\"title\":\"Container_title__2x_Y0\"};"],"sourceRoot":""}