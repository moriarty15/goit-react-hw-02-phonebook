{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","props","name","number","onChange","onChange1","value","type","pattern","title","required","HandleCreateList","f","map","id","Filter","filter","App","state","contacts","handleInputChange","e","setState","currentTarget","handleNumbers","handlePushContact","trim","objd","uuidv4","changeFilter","getVisibleContacts","normalizeFilter","toLowerCase","contact","includes","this","visibleContacts","onClick","React","Component","reactDom","render","document","getElementById"],"mappings":"4OAAe,SAASA,EAAYC,GAChC,IAAOC,EAAqCD,EAArCC,KAAMC,EAA+BF,EAA/BE,OAAQC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,UAC/B,OAAQ,gCACJ,yCAEE,uBACEC,MAAOJ,EACPE,SAAUA,EACVG,KAAK,OACLL,KAAK,OACLM,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,uBACA,2CAEE,uBACEH,KAAK,MACLD,MAAOH,EACPC,SAAUC,EACVH,KAAK,SACLM,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,UCzBpB,IAaeC,EAbU,SAAC,GAAS,IAARC,EAAO,EAAPA,EACvB,OACI,6BACKA,EAAEC,KAAI,YAAyB,IAAvBC,EAAsB,EAAtBA,GAAIZ,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACf,OACI,+BACKD,EADL,KACaC,IADJW,SCMdC,EAXA,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQZ,EAAc,EAAdA,SACrB,OAAQ,0DACA,uBACEG,KAAK,OACLL,KAAK,SACLI,MAAOU,EACPZ,SAAUA,QCAlBa,E,4MACJC,MAAQ,CACNC,SAAU,GACVH,OAAQ,GACRd,KAAM,GACNC,OAAQ,I,EAEViB,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEpB,KAAMmB,EAAEE,cAAcjB,S,EAExCkB,cAAgB,SAAAH,GACd,EAAKC,SAAS,CAAEnB,OAAQkB,EAAEE,cAAcjB,S,EAE1CmB,kBAAoB,WAClB,GAA+B,KAA3B,EAAKP,MAAMhB,KAAKwB,OAApB,CACA,IAAMC,EAAO,CACXzB,KAAM,EAAKgB,MAAMhB,KACjBC,OAAQ,EAAKe,MAAMf,OACnBW,GAAIc,eAEN,EAAKN,SAAS,CAAEH,SAAS,GAAD,mBAAM,EAAKD,MAAMC,UAAjB,CAA2BQ,Q,EAGrDE,aAAe,SAACR,GACd,EAAKC,SAAS,CAACN,OAAQK,EAAEE,cAAcjB,S,EAEzCwB,mBAAqB,WACnB,MAA6B,EAAKZ,MAA1BF,EAAR,EAAQA,OAAQG,EAAhB,EAAgBA,SACVY,EAAkBf,EAAOgB,cAC/B,OAAOb,EAASH,QAAO,SAAAiB,GAAO,OAAIA,EAAQ/B,KAAK8B,cAAcE,SAASH,O,4CAGxE,WACE,MAAgCI,KAAKjB,MAA7BhB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQa,EAAtB,EAAsBA,OAChBoB,EAAkBD,KAAKL,qBAC7B,OACE,gCACE,2CACA,cAAC9B,EAAD,CAAaE,KAAMA,EAAMC,OAAQA,EAAQC,SAAU+B,KAAKf,kBAAmBf,UAAW8B,KAAKX,gBAC3F,uBACA,wBAAQa,QAASF,KAAKV,kBAAtB,yBACA,gCACE,0CACA,uBACA,cAAC,EAAD,CAAQT,OAAQA,EAAQZ,SAAU+B,KAAKN,eACvC,cAAC,EAAD,CAAkBjB,EAAGwB,c,GA7CbE,IAAMC,WAoDTtB,ICvDfuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e95363fb.chunk.js","sourcesContent":["export default function ContactForm(props) {\r\n    const {name, number, onChange, onChange1} = props\r\n    return (<div>\r\n        <label>          \r\n          Name\r\n          <input\r\n            value={name}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={onChange1}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n    </div>\r\n    )\r\n}","const HandleCreateList = ({f}) => {\r\n    return (\r\n        <ul>\r\n            {f.map(({id, name, number}) => {\r\n                return (\r\n                    <li key={id}>\r\n                        {name}: {number}\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>      \r\n    )\r\n}\r\nexport default HandleCreateList;","const Filter = ({filter, onChange}) => {\r\n    return (<label>Find contacts by name\r\n            <input\r\n              type=\"text\"\r\n              name=\"filter\"\r\n              value={filter}\r\n              onChange={onChange}\r\n            />\r\n          </label>)\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './components/ContactForm';\r\nimport HandleCreateList from './components/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleInputChange = e => {\r\n    this.setState({ name: e.currentTarget.value });\r\n  };\r\n  handleNumbers = e => {\r\n    this.setState({ number: e.currentTarget.value });\r\n  };\r\n  handlePushContact = () => {\r\n    if (this.state.name.trim() === '') return;\r\n    const objd = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: uuidv4(),\r\n    };\r\n    this.setState({ contacts: [...this.state.contacts, objd] });\r\n  };\r\n\r\n  changeFilter = (e) => {\r\n    this.setState({filter: e.currentTarget.value})\r\n  }\r\n  getVisibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizeFilter))\r\n  }\r\n\r\n  render() {\r\n    const { name, number, filter} = this.state;    \r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm name={name} number={number} onChange={this.handleInputChange} onChange1={this.handleNumbers }/>\r\n        <br />\r\n        <button onClick={this.handlePushContact}>Add contact</button>\r\n        <div>\r\n          <h2>Contacts</h2>\r\n          <br/>\r\n          <Filter filter={filter} onChange={this.changeFilter}/>\r\n          <HandleCreateList f={visibleContacts}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import reactDom from 'react-dom';\nimport App from './App';\n\nreactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}